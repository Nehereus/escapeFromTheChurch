<!--Saved by Quest 5.8.6836.13983-->
<asl version="580">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Escape the Church">
    <gameid>b71b5964-07fe-488a-83e1-76da64dff263</gameid>
    <version>2.1</version>
    <firstpublished>2022</firstpublished>
    <defaultforeground>Black</defaultforeground>
    <defaultbackground>PowderBlue</defaultbackground>
    <marginscolour>GhostWhite</marginscolour>
    <setbackgroundopacity type="boolean">false</setbackgroundopacity>
    <showscore type="boolean">false</showscore>
    <colourblend type="boolean">false</colourblend>
    <defaultfont>Georgia, serif</defaultfont>
    <panestheme>Tranquil</panestheme>
    <showborder />
    <bordercolour type="string"></bordercolour>
    <turnoffcompass type="boolean">false</turnoffcompass>
    <showpanes />
    <menubackground>PowderBlue</menubackground>
    <menuhoverbackground>LightSteelBlue</menuhoverbackground>
    <shadowbox type="boolean">false</shadowbox>
    <showlocation />
    <classiclocation />
    <customlocationcolour>DeepSkyBlue</customlocationcolour>
    <customlocationtextcolour>Navy</customlocationtextcolour>
    <statusandcompassattop type="boolean">false</statusandcompassattop>
    <borderlesscursor />
    <author>Kevin Zhou, Bryan Jia, Nick Du, Luck Zhang</author>
    <start type="script"><![CDATA[
      msg ("Welcome to Escape the Church! If you get stuck, type HELP for some guidance. Also, keep in mind that not everything in this game is necessarily accessible by hyperlink. The text input isn't entirely decorative, you know.<br/><br/>Have fun!<br/>")
      wait {
        msg ("You wake up in a dark room, with only dim light filtering in from above. It looks like you're in a basement. You feel the urge to get out of here as soon as possible.<br/>")
        wait {
        }
      }
    ]]></start>
  </game>
  <object name="basement">
    <inherit name="editor_room" />
    <isroom />
    <description type="string"></description>
    <object name="basement_north">
      <inherit name="editor_room" />
      <alias>north of the basement</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <suffix type="string"></suffix>
      <object name="bed">
        <inherit name="editor_object" />
        <lie>It does not look comfortable at all. Standing up is probably more restful than sleeping on that thing.</lie>
        <takemsg>You'd probably have to hire movers for that. Too bad you're trapped down here, completely cut off from the outside world.</takemsg>
        <look>A very old, very dusty bed.</look>
        <not_all />
      </object>
      <object name="writing on the wall">
        <inherit name="editor_object" />
        <inherit name="plural" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>some</prefix>
        <drop type="boolean">false</drop>
        <not_all />
        <takemsg>It's writing on the wall. Not exactly something you can pick up.</takemsg>
        <look type="script"><![CDATA[
          if (IsSwitchedOn(lamp)) {
            PrintCentered ("Still remember ECER290? <br/>Time to Review!")
            msg ("A message. Looks like Dr. Wienerberg's handwiring.")
          }
          else {
            msg ("The light is too dim, you cannot quite see what is written.")
          }
        ]]></look>
      </object>
      <exit alias="south" to="basement_center">
        <inherit name="southdirection" />
      </exit>
      <exit alias="west" to="basement_northwest">
        <inherit name="westdirection" />
      </exit>
    </object>
    <object name="basement_center">
      <inherit name="editor_room" />
      <alias>center of the basement</alias>
      <isroom />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <suffix type="string"></suffix>
      <exitslistprefix>You can go</exitslistprefix>
      <description type="script">
        if (IsSwitchedOn(lamp)) {
          msg ("Soft lamp light fills the room. To the northeast are the bed and writing on the wall. To the southeast are the bookshelf and desk. To the southwest is the circuit box. To the northwest are the lamp and TV. Additionally, you can now see the door to upstairs.")
        }
        else {
          msg ("The room is too dark to make out much of your surroundings.")
        }
      </description>
      <exit name="basement_door" alias="up" to="chapel">
        <inherit name="updirection" />
        <scenery type="boolean">false</scenery>
        <locked />
        <visible type="boolean">false</visible>
        <lockmessage>You go to exit, but the door is locked. It has a keypad on it. You're going to need to figure out some kind of code to get out of here.</lockmessage>
        <runscript />
        <script type="script">
          firsttime {
            msg ("You go upstairs.")
            MoveObject (player, chapel)
          }
          otherwise {
            MoveObject (player, chapel)
          }
        </script>
      </exit>
      <exit alias="north" to="basement_north">
        <inherit name="northdirection" />
      </exit>
      <exit alias="west" to="basement_west">
        <inherit name="westdirection" />
      </exit>
      <exit alias="east" to="basement_east">
        <inherit name="eastdirection" />
      </exit>
      <exit alias="northwest" to="basement_northwest">
        <inherit name="northwestdirection" />
      </exit>
      <object name="player">
        <inherit name="editor_object" />
        <inherit name="editor_player" />
        <inherit name="female" />
        <statusattributes type="stringdictionary" />
        <score type="int">0</score>
        <alias>you</alias>
        <visible />
        <gender>she</gender>
        <article>she</article>
        <possessive>her</possessive>
        <scenery type="boolean">false</scenery>
        <isroom type="boolean">false</isroom>
        <usedefaultprefix />
        <takemsg>For better or worse, you always have yourself.</takemsg>
        <look>You're Catherine Wendorff. You're a second-year college student, and right now you're not very happy.</look>
        <unlock>You stand still for a moment, lost in deep introspection. When you come back down to earth, you're still trapped physically, but spiritually, you've never felt freer.</unlock>
      </object>
      <object name="door">
        <inherit name="editor_object" />
        <scenery />
        <visible type="boolean">false</visible>
        <takemsg>You're much more concerned with opening it right now.</takemsg>
        <look type="script">
          OutputTextNoBr ("The door out of here. It has a keypad on it. ")
          if (basement_door.locked = true) {
            msg ("You're going to need to figure out some kind of code to open it.")
          }
          else {
            msg ("Good thing you already solved the code.")
          }
        </look>
      </object>
    </object>
    <object name="basement_west">
      <inherit name="editor_room" />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <suffix type="string"></suffix>
      <alias>west side of the basement</alias>
      <object name="circuit box">
        <inherit name="editor_object" />
        <visible />
        <takemsg>Obviously not. It's embedded in the wall.</takemsg>
        <not_all />
        <look type="script"><![CDATA[
          OutputTextNoBr ("It seems to control the room's power, ")
          if (HasAttribute(this, "is_fixed")) {
            msg ("and it works like a charm now. <br/>")
          }
          else {
            msg ("but it looks like one of the wires has burnt out.")
          }
        ]]></look>
        <fix type="scriptdictionary">
          <item key="pliers">
            if (not GetBoolean(circuit box, "is_fixed")) {
              msg ("Unfortunately, cutting the already burnt wire won't help.")
            }
            else {
              msg ("The circuit box has been fixed, don't break it again!")
            }
          </item>
          <item key="wire">
            msg ("You use the spare bit of wire to repair the broken circuit.")
            set (lamp, "cannotswitchon", null)
            RemoveObject (wire)
            SetObjectFlagOn (circuit box, "is_fixed")
          </item>
          <item key="books">
            if (not GetBoolean(circuit box, "is_fixed")) {
              msg ("You don't need a book to tell you how to fix this. You need something to actually fix it with.")
            }
            else {
              msg ("The circuit box has been fixed, don't break it again")
            }
          </item>
          <item key="letter">
            if (not GetBoolean(circuit box, "is_fixed")) {
              msg ("Amazingly, this random piece of paper is not helping at all with this broken circuitry.")
            }
            else {
              msg ("The circuit box has been fixed, don't break it again")
            }
          </item>
          <item key="player">
            if (not GetBoolean(circuit box, "is_fixed")) {
              msg ("General advice: don't stick your fingers into live circuits.")
            }
            else {
              msg ("The circuit box has been fixed, don't break it again")
            }
          </item>
        </fix>
      </object>
      <object name="television">
        <inherit name="editor_object" />
        <inherit name="surface" />
        <inherit name="switchable" />
        <alias>tv</alias>
        <visible />
        <feature_switchable />
        <takemsg>It looks heavy, and besides, what do you want with a broken TV anyways?</takemsg>
        <cannotswitchon>The TV is very broken. This is not working.</cannotswitchon>
        <switchoffmsg>It is already switched off. Also broken.</switchoffmsg>
        <attr name="wire_cut" type="boolean">false</attr>
        <not_all />
        <attr name="feature_usegive" type="boolean">false</attr>
        <attr name="feature_container" type="boolean">false</attr>
        <look type="script">
          if (Contains (television,wire)) {
            msg ("A nice-looking plasma tv, but the screen is cracked. You can see an exposed {object:wire} in the back.")
            MakeObjectVisible (wire)
          }
          else {
            msg ("A nice-looking plasma tv, but the screen is cracked. It should stay in a trash chute now.")
          }
        </look>
        <onswitchon type="script">
        </onswitchon>
        <onswitchoff type="script">
        </onswitchoff>
        <object name="wire">
          <inherit name="editor_object" />
          <scenery type="boolean">false</scenery>
          <feature_usegive />
          <take type="boolean">false</take>
          <not_all />
          <takemsg>You try to pull the wire out of the TV, but it doesn't give.</takemsg>
          <visible type="boolean">false</visible>
          <use />
          <look type="script">
            if (Contains (television,wire)) {
              msg ("There is an exposed wire sticking out the back of the TV.")
            }
            else {
              msg ("A wire cut form the old tv.")
            }
          </look>
          <ontake type="script">
          </ontake>
          <cut type="scriptdictionary">
            <item key="pliers">
              if (wire.visible = true) {
                if (television.wire_cut = false) {
                  msg ("You cut the wire free from the TV and take it.")
                  AddToInventory (wire)
                  set (wire, "scenery", false)
                  set (wire, "take", true)
                  set (wire, "takemsg", "You pick it up.")
                  set (television, "wire_cut", true)
                }
                else {
                  msg ("Cutting that won't help.")
                }
              }
              else {
                msg ("Cutting that won't help.")
              }
            </item>
            <item key="books">
              msg ("You cannot cut the wire with some pieces of papers.")
            </item>
            <item key="letter">
              msg ("You cannot cut the wire with a piece of papers.")
            </item>
          </cut>
          <selfuseon type="scriptdictionary">
            <item key="circuit box">
              msg ("You use the spare bit of wire to repair the broken circuit.")
              set (lamp, "cannotswitchon", null)
              RemoveObject (wire)
              SetObjectFlagOn (circuit box, "is_fixed")
            </item>
          </selfuseon>
        </object>
      </object>
      <exit alias="east" to="basement_center">
        <inherit name="eastdirection" />
      </exit>
      <exit alias="north" to="basement_northwest">
        <inherit name="northdirection" />
      </exit>
    </object>
    <object name="basement_east">
      <inherit name="editor_room" />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <alias>east side of the basement</alias>
      <object name="bookshelf">
        <inherit name="editor_object" />
        <inherit name="surface" />
        <feature_container />
        <open type="boolean">false</open>
        <close type="boolean">false</close>
        <hidechildren />
        <listchildren />
        <isopen />
        <listchildrenprefix>You found</listchildrenprefix>
        <contentsprefix>on which there are</contentsprefix>
        <takemsg>This enormous bookshelf is somehow not budging, despite your best efforts.</takemsg>
        <not_all />
        <look type="script">
          if (not IsSwitchedOn(lamp)) {
            firsttime {
              msg ("The light is dim, but you manage to identify some items on the bookshelf.")
            }
            otherwise {
              msg ("The bookshelf towers a respectable height above you.")
            }
          }
          else {
            msg ("The bookshelf towers a respectable height above you.")
          }
        </look>
        <object name="books">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <usedefaultprefix />
          <prefix>a</prefix>
          <take />
          <feature_usegive />
          <attr name="has_read" type="int">0</attr>
          <dropmsg>It drops on the floor with a dull thud.</dropmsg>
          <feature_container />
          <hidechildren />
          <alias>textbook</alias>
          <scenery type="boolean">false</scenery>
          <use />
          <look type="script">
            msg ("A textbook of ECER 290. A lot of marks and side notes on the pages, Juding from the handwrting, it's probably Professor Wienerberg's textbook. You only read a few pages of the textbook of this class before.")
          </look>
          <selfuseanything type="script">
            msg ("Using books won't help here.")
          </selfuseanything>
          <read type="script">
            if (IsSwitchedOn(lamp)) {
              set (books, "hidechildren", false)
              msg ("Table of Contents")
              msg ("{object:first chapter:First Chapter}: Newtonian Physics")
              msg ("{object:second chapter:Second Chapter}: Electricity")
              msg ("{object:third chapter:Third Chapter}: Momentum and Collisions")
              msg ("{object:fourth chapter:Fourth Chapter}: Work and Energy")
              msg ("{object:fifth chapter:Fifth Chapter}: Torque and Rotation")
              msg ("{object:sixth chapter:Sixth Chapter}: Angular Momentum")
              msg ("{object:seventh chapter:Seventh Chapter}: the Wave Equation")
              msg ("{object:eighth chapter:Eighth Chapter}: Fluids")
              msg ("{object:ninth chapter:Ninth Chapter}: Oscillations")
              msg ("note: click the hyperlink to read")
            }
            else {
              msg ("You can't make out the finer text in this dim light.")
            }
          </read>
          <selfuseon type="scriptdictionary">
            <item key="Sharon"><![CDATA[
              if (Sharon.alias="Sharon's door") {
                msg ("You shared some useful knowledge in that chapter with Sharon. Talking over the door, you begin to realize that you don't actually hate her. You did not like her simply because she is your lab partner and you did not enjoy lab experiments and reports. <br/><br/>After working together, you think you can unlock {object:Sharon}.")
                set (Sharon, "has_been_annoying", true)
                set (Sharon, "displayverbs", ListCombine(Sharon.displayverbs, Split("Unlock")))
              }
              else {
                msg ("Using books won't help here.")
              }
            ]]></item>
          </selfuseon>
          <object name="first chapter">
            <inherit name="editor_object" />
            <scenery />
            <visible />
            <not_all />
            <drop type="boolean">false</drop>
            <alias>first chapter</alias>
            <look type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"Newtonian physics, also called Newtonian or classical mechanics, ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </look>
            <read type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"Newtonian physics, also called Newtonian or classical mechanics, ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </read>
          </object>
          <object name="second chapter">
            <inherit name="editor_object" />
            <scenery />
            <visible />
            <not_all />
            <drop type="boolean">false</drop>
            <alias>second chapter</alias>
            <feature_usegive />
            <look type="script">
              if (IsSwitchedOn(lamp)) {
                if (books.has_read = 1) {
                  msg ("You solve the second question by reading this chapter")
                  set (books, "has_read", 2)
                }
                else {
                  msg ("This chapter starts with \"Electricity is the set of physical phenomena associated with the presence and motion of matter ...\" ")
                  set (books, "has_read", 0)
                }
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </look>
            <read type="script">
              if (IsSwitchedOn(lamp)) {
                if (books.has_read = 1) {
                  msg ("You solve the second question by reading this chapter")
                  set (books, "has_read", 2)
                }
                else {
                  msg ("This chapter starts with \"Electricity is the set of physical phenomena associated with the presence and motion of matter ...\" ")
                  set (books, "has_read", 0)
                }
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </read>
            <selfuseon type="scriptdictionary">
              <item key="Sharon"><![CDATA[
                if (Sharon.alias="Sharon's door") {
                  msg ("You shared some useful knowledge in that chapter with Sharon. Talking over the door, you begin to realize that you don't actually hate her. You did not like her simply because she is your lab partner and you did not enjoy lab experiments and reports. <br/><br/>After working together, you think you can unlock {object:Sharon}.")
                  set (Sharon, "has_been_annoying", true)
                  set (Sharon, "displayverbs", ListCombine(Sharon.displayverbs, Split("Unlock")))
                }
                else {
                  msg ("Using books won't help here.")
                }
              ]]></item>
            </selfuseon>
          </object>
          <object name="third chapter">
            <inherit name="editor_object" />
            <scenery />
            <visible />
            <drop type="boolean">false</drop>
            <not_all />
            <alias>third chapter</alias>
            <look type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with\"Momentum is a measurement of mass in motion ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </look>
            <read type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with\"Momentum is a measurement of mass in motion ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </read>
          </object>
          <object name="fourth chapter">
            <inherit name="editor_object" />
            <scenery />
            <visible />
            <not_all />
            <drop type="boolean">false</drop>
            <alias>fourth chapter</alias>
            <look type="script">
              if (IsSwitchedOn(lamp)) {
                if (letter.player_read = true) {
                  msg ("You solve the first question by reading the chapter")
                  set (books, "has_read", 1)
                }
                else {
                  msg ("This chapter starts with \"The concepts of work and energy are closely tied to the concept of force because ...\" ")
                }
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </look>
            <read type="script">
              if (IsSwitchedOn(lamp)) {
                if (letter.player_read = true) {
                  msg ("You solve the first question by reading the chapter")
                  set (books, "has_read", 1)
                }
                else {
                  msg ("This chapter starts with \"The concepts of work and energy are closely tied to the concept of force because ...\" ")
                }
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </read>
          </object>
          <object name="fifth chapter">
            <inherit name="editor_object" />
            <scenery />
            <visible />
            <drop type="boolean">false</drop>
            <not_all />
            <alias>fifth chapter</alias>
            <look type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"Torque is a measure of how much a force acting on an object causes that object to rotate ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </look>
            <read type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"Torque is a measure of how much a force acting on an object causes that object to rotate ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </read>
          </object>
          <object name="sixth chapter">
            <inherit name="editor_object" />
            <scenery />
            <visible />
            <alias>sixth chapter</alias>
            <look type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"angular momentum is the rotational analog of linear momentum ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </look>
            <read type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"angular momentum is the rotational analog of linear momentum ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </read>
          </object>
          <object name="seventh chapter">
            <inherit name="editor_object" />
            <scenery />
            <visible />
            <drop type="boolean">false</drop>
            <not_all />
            <alias>seventh chapter</alias>
            <look type="script">
              if (not IsSwitchedOn(lamp)) {
                msg ("You can't make out the finer text in this dim light.")
              }
              else if (books.has_read = 2) {
                msg ("After you solved the last question, you go to the center of the basement and enter the answer you get to the keypad of lock, the door is opened. ")
                UnlockExit (basement_door)
                MoveObject (player, basement_center)
              }
              else {
                msg ("This chapter starts with \"The wave equation is a second-order linear partial differential equation for the ...\" ")
                set (books, "has_read", 0)
              }
            </look>
            <read type="script">
              if (not IsSwitchedOn(lamp)) {
                msg ("You can't make out the finer text in this dim light.")
              }
              else if (books.has_read = 2) {
                msg ("After you solved the last question, you go to the center of the basement and enter the answer you get to the keypad of lock, the door is opened. ")
                UnlockExit (basement_door)
                MoveObject (player, basement_center)
              }
              else {
                msg ("This chapter starts with \"The wave equation is a second-order linear partial differential equation for the ...\" ")
                set (books, "has_read", 0)
              }
            </read>
          </object>
          <object name="eighth chapter">
            <inherit name="editor_object" />
            <scenery />
            <visible />
            <drop type="boolean">false</drop>
            <not_all />
            <alias>eighth chapter</alias>
            <look type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"Flowing fluids behave different from static fluids ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </look>
            <read type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"Flowing fluids behave different from static fluids ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </read>
          </object>
          <object name="ninth chapter">
            <inherit name="editor_object" />
            <scenery />
            <visible />
            <not_all />
            <drop type="boolean">false</drop>
            <alias>ninth chapter</alias>
            <look type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"Oscillation refers to the repeated back and forth movement of ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </look>
            <read type="script">
              if (IsSwitchedOn(lamp)) {
                msg ("This chapter starts with \"Oscillation refers to the repeated back and forth movement of ...\" ")
                set (books, "has_read", 0)
              }
              else {
                msg ("You can't make out the finer text in this dim light.")
              }
            </read>
          </object>
        </object>
        <object name="pliers">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <scenery type="boolean">false</scenery>
          <take />
          <feature_usegive />
          <prefix>a pair of</prefix>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <look>A solid pair of pliers, with red rubber handles.</look>
          <takemsg>You grab them.</takemsg>
          <dropmsg>Inadvisably, you drop the sharp pliers. Look out below!</dropmsg>
          <use />
          <selfuseanything type="script">
            msg ("Cutting that won't help.")
          </selfuseanything>
          <selfuseon type="scriptdictionary">
            <item key="wire">
              if (wire.visible = true) {
                if (television.wire_cut = false) {
                  msg ("You cut the wire free from the TV and take it.")
                  AddToInventory (wire)
                  set (wire, "scenery", false)
                  set (wire, "take", true)
                  set (wire, "takemsg", "You pick it up.")
                  set (television, "wire_cut", true)
                }
                else {
                  msg ("Cutting that won't help.")
                }
              }
              else {
                msg ("Cutting that won't help.")
              }
            </item>
            <item key="television">
              if (wire.visible = true) {
                if (television.wire_cut = false) {
                  msg ("You cut the wire free from the TV and take it.")
                  AddToInventory (wire)
                  set (wire, "scenery", false)
                  set (wire, "take", true)
                  set (wire, "takemsg", "You pick it up.")
                  set (television, "wire_cut", true)
                }
                else {
                  msg ("Cutting that won't help.")
                }
              }
              else {
                msg ("Cutting that won't help.")
              }
            </item>
          </selfuseon>
        </object>
      </object>
      <object name="desk">
        <inherit name="editor_object" />
        <inherit name="surface" />
        <feature_container />
        <hidechildren type="boolean">false</hidechildren>
        <listchildren />
        <listchildrenprefix>On the desk there lies</listchildrenprefix>
        <takemsg>We are looking at the same desk, right? This thing isn't fitting in your pockets.</takemsg>
        <look>A well-constructed desk. Is that...solid maple? Absolutely luxurious.</look>
        <not_all />
        <object name="letter">
          <inherit name="editor_object" />
          <take />
          <attr name="feature_usegive" type="boolean">false</attr>
          <takemsg>You fold up the letter and tuck it away.</takemsg>
          <attr name="player_read" type="boolean">false</attr>
          <drop type="boolean">false</drop>
          <dropmsg>You don't think that's such a good idea. It might have clues for getting out of here.</dropmsg>
          <look type="script"><![CDATA[
            if (IsSwitchedOn(lamp)) {
              if (letter.player_read = false) {
                TextFX_Typewriter ("\"Catherine,", 50)
                SetTimeout (1) {
                  TextFX_Typewriter ("Your performance in my class was abysmal. You and your partner completely neglected to work together on the final project. Now both of you are stuck in here until you can learn some cooperation.", 25)
                  SetTimeout (5) {
                    TextFX_Typewriter ("Severely Disappointed,", 50)
                    SetTimeout (1) {
                      TextFX_Typewriter ("Professor Von Wienerberg\"", 50)
                      SetTimeout (2) {
                        wait {
                          msg ("<br/>There's a {object:sticky note} with three complicated-looking homework problems attached on the back.<br/><br/>Well. Turns out your teacher's insane. No time to worry about that now, though. Right now, you need to focus on getting out of here, and apparently rescuing your project partner...what was her name again?")
                          set (letter, "player_read", true)
                          AddToInventory (sticky note)
                        }
                      }
                    }
                  }
                }
              }
              else {
                msg ("\"Catherine,<br/>Your performance in my class was abysmal. You and your partner completely neglected to work together on the final project. Now both of you are stuck in here until you can learn some cooperation.<br/>Severely Disappointed,<br/>Professor Von Wienerberg\"<br/><br/>There's a {object:sticky note} with three complicated-looking homework problems attached on the back.")
              }
            }
            else {
              msg ("The light is too dim for you to make out what the letter says.")
            }
          ]]></look>
          <object name="sticky note">
            <inherit name="editor_object" />
            <alias>sticky note</alias>
            <take type="boolean">false</take>
            <drop type="boolean">false</drop>
            <not_all />
            <look type="script"><![CDATA[
              msg ("There are three complicated questions on it.")
              msg ("The first one is about Work and Energy;")
              msg ("The second one is about Electricity;")
              msg ("The third one is about Wave Equation.")
              msg ("at the end, there's a handwriting said \"solve them {b:in order}!\"")
              msg ("<br/>You don't know how to solve any of these. You'd have to consult an outside source, but that's somewhat difficult right now.")
            ]]></look>
            <read type="script">
              msg ("There are three complicated questions on it.")
              msg ("The first one is about Work and Energy;")
              msg ("The second one is about electricity;")
              msg ("The third one is about the Wave Equation.")
              msg ("at the end, there's a handwriting said \"solve them {b:in order}!\"")
            </read>
          </object>
        </object>
      </object>
      <exit alias="west" to="basement_center">
        <inherit name="westdirection" />
      </exit>
    </object>
    <object name="basement_northwest">
      <inherit name="editor_room" />
      <alias>northwest corner of the basement</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <object name="lamp">
        <inherit name="editor_object" />
        <inherit name="switchable" />
        <visible />
        <scenery type="boolean">false</scenery>
        <usedefaultprefix />
        <look>The tall metal floor lamp looms in the corner. It's clearly been disused for some time, as it's covered with dust.</look>
        <alias>lamp</alias>
        <feature_switchable />
        <switchoffmsg>You plunge the room back into darkness.</switchoffmsg>
        <cannotswitchon>You hear a click, but the lamp doesn't turn on.</cannotswitchon>
        <switchonmsg>You click the lamp on, and light fills the room. Much better.</switchonmsg>
        <takemsg>This lamp is as tall as you are. You don't want to upset it by getting handsy.</takemsg>
        <not_all />
        <onswitchon type="script">
          MakeExitVisible (basement_door)
          MakeObjectVisible (door)
        </onswitchon>
        <onswitchoff type="script">
          MakeExitInvisible (basement_door)
          MakeObjectInvisible (door)
        </onswitchoff>
      </object>
      <exit alias="southeast" to="basement_center">
        <inherit name="southeastdirection" />
      </exit>
      <exit alias="south" to="basement_west">
        <inherit name="southdirection" />
      </exit>
      <exit alias="east" to="basement_north">
        <inherit name="eastdirection" />
      </exit>
    </object>
  </object>
  <verb>
    <property>fix</property>
    <pattern>fix</pattern>
    <defaultexpression>"You can't fix " + object.article + "."</defaultexpression>
  </verb>
  <object name="chapel">
    <inherit name="editor_room" />
    <description>The ceiling stretches high overhead. Rows of benches line the floor, leading up to a lectern and communion table at the north end of the church, with large windows looming above. The front door sits at the south end.</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <object name="benches">
      <inherit name="editor_object" />
      <inherit name="plural" />
      <look>Uncomfortable wooden benches, perfect for preventing children from sitting still during service.</look>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <scenery />
      <takemsg>You don't want these benches. They're not really useful for anything.</takemsg>
      <not_all />
    </object>
    <object name="ceiling">
      <inherit name="editor_object" />
      <scenery />
      <look>You look up for a moment, but quickly look back down before you get dizzy.</look>
      <takemsg>You can't even reach it.</takemsg>
      <not_all />
    </object>
    <object name="front door">
      <inherit name="editor_object" />
      <scenery type="boolean">false</scenery>
      <look>Tall and imposing, the front door of the church is also very locked.</look>
      <feature_usegive />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Use</value>
      </displayverbs>
      <givesingle type="boolean">false</givesingle>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <not_all />
      <takemsg>You'd steal the door off a church? That's low.</takemsg>
      <use type="script">
        if (not ListContains(ScopeVisible(), Sharon)) {
          msg ("You try to exit the chapel, but the door doesn't budge. It's locked from the outside. You're going to have to find another way out of here.")
        }
        else {
          msg ("You try to exit the chapel, but the door doesn't budge. It's locked from the outside. You're going to need to find another way out.")
        }
      </use>
    </object>
    <exit alias="the basement" to="basement_center">
      <inherit name="downdirection" />
      <runscript type="boolean">false</runscript>
      <prefix>to</prefix>
      <script type="script">
        MoveObject (player, basement_center)
        DisableTimer (sharon_timer)
      </script>
    </exit>
    <object name="Sharon">
      <inherit name="editor_object" />
      <inherit name="female" />
      <visible type="boolean">false</visible>
      <alias>storage room door</alias>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <usestandardverblist />
      <attr name="has_been_annoying" type="boolean">false</attr>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <look type="script"><![CDATA[
        firsttime {
          msg ("\"Catherine? Is that you? It's me, Sharon! Professor Von Wienerberg trapped me in here!\"<br/><br/>Phew. It's a good thing she told you her name, it'd be incredibly awkward to ask her at this point. Also, you should probably get on rescuing her.")
          set (Sharon, "alias", "Sharon's door")
          set (Sharon, "displayverbs", ListCombine(Sharon.displayverbs, Split("Speak to")))
          set (Sharon, "prefix", "")
        }
        otherwise {
          if (Sharon.alias = "Sharon's door") {
            msg ("An unremarkable door that's keeping an unremarkable person trapped. (Don't tell Sharon I said that)")
          }
          else if (Sharon.alias = "Sharon") {
            msg ("You realize that you do not actually hate her. You did not like her simply because she was your lab partner and you did not enjoy lab experiments and reports. You begin to think that maybe you can be friend with her after all this.")
          }
          else {
            msg ("An unremarkable door.")
          }
        }
      ]]></look>
      <speak type="script">
        if (Sharon.alias = "storage room door") {
          msg ("It says nothing. The person behind it, however, is not so quiet. Probably worth a closer look.")
        }
        else if (Sharon.alias = "Sharon's door") {
          msg ("\"Help me, Catherine! There's some kind of weird electrical circuit puzzle in here, I got some batteries and some wire, and I have to connect the voltmeter either in series or parallel correctly to give 3 different outputs, but I have no idea how to solve it!\" ")
          msg ("You remember you just read the chapter of electricity in the basement, time to use the book to enlighten Sharon!")
        }
        else {
          msg ("\"Thank you so much for getting me out of there!\"")
        }
      </speak>
      <unlock type="script"><![CDATA[
        if (Sharon.alias = "Sharon's door") {
          if (Sharon.has_been_annoying = true) {
            msg ("Finally, you're able to help Sharon figure out the puzzles, and she unlocks the storage room door.<br/><br/>Sharon gingerly steps out.")
            set (Sharon, "alias", "Sharon")
            set (Sharon, "displayverbs", Split("Look at;Speak to", ";"))
          }
          else {
            msg ("You can't do that.")
          }
        }
        else {
          msg ("You can't unlock that.")
        }
      ]]></unlock>
    </object>
    <exit alias="north" to="front of the chapel">
      <inherit name="northdirection" />
      <runscript />
      <script type="script">
        MoveObject (player, front of the chapel)
        if (Sharon.alias = "Sharon") {
          MoveObject (Sharon, front of the chapel)
          msg ("Sharon follows you.")
        }
      </script>
    </exit>
  </object>
  <object name="front of the chapel">
    <inherit name="editor_room" />
    <description>You are at the north end of the church by the lectern and communion table.</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <object name="windows">
      <inherit name="editor_object" />
      <inherit name="plural" />
      <scenery type="boolean">false</scenery>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <feature_usegive />
      <not_all />
      <takemsg>You'd steal the windows off a church? That's low.</takemsg>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Use</value>
      </displayverbs>
      <look>Large windows high on the wall above the lectern. Maybe you could use them to escape?</look>
      <use type="script"><![CDATA[
        if (Sharon.visible = false) {
          msg ("You try to exit the chapel, but the windows are too high to reach. You're going to need to find a way to get up there.<br/><br/>You hear shouting coming from the {object:Sharon} back the way you came from.")
          MakeObjectVisible (Sharon)
        }
        else if (Sharon.alias = "Sharon") {
          msg ("With Sharon's help, you're able to climb up out the window, and you go around front to let her out the door. With professor's textbook in your hand, you finally think that the material of this course may actually help a lot in real life. You decide that you will study the book with Sharon again, complete the final project with her and request a makeup test from your porfessor.<br/><br/>Congratulations! You've beat Escape the Church!")
          finish
        }
        else {
          msg ("You try to exit the chapel, but the windows are too high to reach. You're going to need to find a way to get up there.")
        }
      ]]></use>
    </object>
    <object name="lectern">
      <inherit name="editor_object" />
      <look>The pulpit radiates authority, even with the church in this dark, empty state.</look>
      <scenery />
      <takemsg>You're far too intimidated to consider moving the lectern.</takemsg>
      <not_all />
      <visible />
    </object>
    <object name="communion table">
      <inherit name="editor_object" />
      <scenery />
      <takemsg>Probably not. That feels sacrilegious.</takemsg>
      <look>Simply adorned, the table has a religious text atop it.</look>
      <not_all />
    </object>
    <exit alias="south" to="chapel">
      <inherit name="southdirection" />
      <prefix type="string"></prefix>
      <runscript />
      <script type="script">
        MoveObject (player, chapel)
        if (Sharon.alias = "Sharon") {
          MoveObject (Sharon, chapel)
          msg ("Sharon follows you.")
        }
      </script>
    </exit>
  </object>
  <verb>
    <property>cut</property>
    <pattern>cut</pattern>
    <defaultexpression>"You can't cut " + object.article + "."</defaultexpression>
  </verb>
</asl>